[{"/Users/adariusc/Projects/Amazon/amazon-clone/src/index.js":"1","/Users/adariusc/Projects/Amazon/amazon-clone/src/App.js":"2","/Users/adariusc/Projects/Amazon/amazon-clone/src/reportWebVitals.js":"3","/Users/adariusc/Projects/Amazon/amazon-clone/src/Header.js":"4","/Users/adariusc/Projects/Amazon/amazon-clone/src/Home.js":"5","/Users/adariusc/Projects/Amazon/amazon-clone/src/Product.js":"6","/Users/adariusc/Projects/Amazon/amazon-clone/src/Checkout.js":"7","/Users/adariusc/Projects/Amazon/amazon-clone/src/Subtotal.js":"8","/Users/adariusc/Projects/Amazon/amazon-clone/src/StateProvider.js":"9","/Users/adariusc/Projects/Amazon/amazon-clone/src/reducer.js":"10","/Users/adariusc/Projects/Amazon/amazon-clone/src/serviceWorker.js":"11","/Users/adariusc/Projects/Amazon/amazon-clone/src/CheckoutProduct.js":"12","/Users/adariusc/Projects/Amazon/amazon-clone/src/Login.js":"13","/Users/adariusc/Projects/Amazon/amazon-clone/src/firebase.js":"14","/Users/adariusc/Projects/Amazon/amazon-clone/src/Footer.js":"15","/Users/adariusc/Projects/Amazon/amazon-clone/src/Payment.js":"16","/Users/adariusc/Projects/Amazon/amazon-clone/src/axios.js":"17"},{"size":694,"mtime":1607497904392,"results":"18","hashOfConfig":"19"},{"size":2084,"mtime":1607753581639,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607407107517,"results":"21","hashOfConfig":"19"},{"size":2403,"mtime":1607716764147,"results":"22","hashOfConfig":"19"},{"size":4855,"mtime":1607721695208,"results":"23","hashOfConfig":"19"},{"size":1384,"mtime":1607563979861,"results":"24","hashOfConfig":"19"},{"size":1872,"mtime":1607722729193,"results":"25","hashOfConfig":"19"},{"size":1156,"mtime":1607718459577,"results":"26","hashOfConfig":"19"},{"size":481,"mtime":1607497104339,"results":"27","hashOfConfig":"19"},{"size":1136,"mtime":1607583975764,"results":"28","hashOfConfig":"19"},{"size":5341,"mtime":1607498051266,"results":"29","hashOfConfig":"19"},{"size":1310,"mtime":1607566137210,"results":"30","hashOfConfig":"19"},{"size":3442,"mtime":1607725546897,"results":"31","hashOfConfig":"19"},{"size":600,"mtime":1607580735342,"results":"32","hashOfConfig":"19"},{"size":2896,"mtime":1607717160741,"results":"33","hashOfConfig":"19"},{"size":6949,"mtime":1607768335489,"results":"34","hashOfConfig":"19"},{"size":235,"mtime":1607767178877,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y4m589",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adariusc/Projects/Amazon/amazon-clone/src/index.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/App.js",["73","74"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/reportWebVitals.js",[],["75","76"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Header.js",["77","78"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Home.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Product.js",["79"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Checkout.js",["80"],"import React from 'react'\nimport { Helmet } from 'react-helmet';\nimport \"./Checkout.css\";\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from './StateProvider';\nimport Subtotal from \"./Subtotal\";\n\n\nfunction Checkout() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    \n    return (\n        <div className=\"checkout\">\n\n            <div>  \n             <Helmet>\n             <title>Amazon-Clone | Checkout</title>\n             </Helmet>\n            </div>\n\n            <div className=\"checkout_left\">\n                \n             <img className=\"checkout_ad\" \n             src=\"https://images-na.ssl-images-amazon.com/images/G/01/credit/img16/CCMP/newstorefront/YACC-desktop-nonprime-banner2.jpg\" \n             alt=\"Amazon credit banner\" \n             />\n             <form action=\"https://www.amazon.com/gp/cobrandcard/marketing.html?pr=con321&inc=US_UNREC_ACQ_EP_18M&ts=8hi54cz9tofgxzwb4eai53bsok39m55&plattr=CBCCPFACQ&place=vc&imp=43eb79b2-b08c-46d5-9578-c6dab7708a53\" method=\"get\" target=\"_blank\">\n             <button className=\"button\" type=\"submit\">Learn More</button>\n             </form>\n            \n             <div>\n                <h2>{\"Hello,\"} {user?.email}</h2>\n                <h2 className=\"checkout_title\">\n                    Shopping Cart:\n                </h2>\n\n                {/* BasketItem */}\n                {basket.map(item => (\n                <CheckoutProduct \n                    \n                 id={item.id}\n                 title={item.title}\n                 image={item.image}\n                 price={item.price}\n                 rating={item.rating}\n                    \n                 />\n                ))}\n\n             </div>\n            </div>\n\n            <div className=\"checkout-right\">\n                <Subtotal />\n            </div>\n        </div>\n    )\n}\n\nexport default Checkout\n","/Users/adariusc/Projects/Amazon/amazon-clone/src/Subtotal.js",["81"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/StateProvider.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/reducer.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/serviceWorker.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/CheckoutProduct.js",["82","83"],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Login.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/firebase.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Footer.js",[],"/Users/adariusc/Projects/Amazon/amazon-clone/src/Payment.js",["84"],"import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Helmet } from 'react-helmet';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { getBasketTotal } from './reducer';\nimport { useStateValue } from './StateProvider';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport axios from './axios';\n\nfunction Payment() {\n    // const is used to create a variable \n\n    const [{ basket, user}] = useStateValue();\n\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n\n    const [error, setError] = useState(null);\n    const [disable, setDisable] = useState(true);\n\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generat the clientSecret(stripe) which allows us to charge a customer\n        // whenever the baskets changes, it will make a request to update the stripe secret(clientSecret), which allows us to charge to customer the correct amount.\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currency subunit (usd = American currency)\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n        getClientSecret();\n    }, [basket])\n\n    console.log('HERESSS JOhNNY', clientSecret)\n\n    // Takes an e(event) and does some stuff\n    const handleSubmit = async (event) => {\n        // stop it from refreshing\n        event.preventDefault();\n        \n        // when you hit the enter. it'll block you from hitting the buy buttton again. Allowed to click once\n        setProcessing(true);\n\n\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n         }).then(({ paymentIntent }) => {\n            // paymentInent = payment confirmation\n\n            // transation was good\n            setSucceeded(true);\n\n            // no error was made\n            setError(null);\n\n            // nothing else should be processing\n            setProcessing(false);\n\n            // doesnt want them to go back to the payment page to do a loop\n            history.replaceState('/orders')\n        });\n\n\n    };\n\n    const handleChange = event => {\n        // set an disable button and error button\n\n        /*Listen for changes in the CardElement and display any errors \n        as the customer type thier cards details */\n\n        // If if this event is empty then disable the button, otherwise if an error occurs show the error or nothing. \n\n         setDisable(event.empty);\n         setError(event.error ? event.error.message : \"Invaild Card Information. Please provide correct details.\");\n\n    };\n\n\n    return (\n        <div className=\"payment\">\n            <div>  \n             <Helmet>\n             <title>Amazon-Clone | Payment</title>\n             </Helmet>\n            </div>\n         \n            <div className=\"payment_container\">\n              <img\n                 className=\"home__image\"\n                 src=\"https://www.keenan.com/Portals/15/Images/blog_amazon_detail.jpg?ver=2020-12-10-172607-653\"\n                 alt=\"Amazon Shopping-banner \"\n              />\n\n              <h1>\n                  Review Your Order (<Link to=\"/checkout\">{basket?.length} items</Link>)\n              </h1>\n\n                {/*Delivery address*/}\n             <div className=\"payment_section\">\n                 <div className=\"payment_title\">\n                     <h2>Shipping Address:</h2>\n                 </div>\n                  <div className=\"payment_address\">\n                    <p>{user?.email}</p>\n                      <p>1234 Sosa Lane</p>\n                      <p>Birmingham,AL</p>\n                  </div>\n             </div>\n             {/*Review Items*/}\n             <div className=\"payment_section\">\n                 <div className=\"payment_title\">\n                     <h2>Checkout Items and Review:</h2>\n                 </div>\n                  <div className=\"payment_items\">\n                  {basket.map(item => (\n                    <CheckoutProduct\n                    \n                        id={item.id}\n                        title={item.title}\n                        image={item.image}\n                        price={item.price}\n                        rating={item.rating}\n                    \n                    />\n                    ))}\n                  </div>\n             </div>\n\n             {/* Payment Method */}\n             <div className=\"payment_section\">\n                 <div className=\"payment_title\">\n                     <h2>Payment Method:</h2>\n                 </div>\n                  <div className=\"payment_details\">\n                      {/* stripe magic*/}\n                      \n\n                      <form onSubmit={handleSubmit}> \n                          <CardElement onChange={handleChange} />\n                          <div className=\"payment_priceContainer\">\n                             <CurrencyFormat\n                                 renderText={(value) => (\n                                      <>\n                                        <h4>\n                                         <em>Order Total</em>: <strong>{value}</strong>\n                                        </h4>\n                                        <small className=\"payment_gift\">\n                                            <input type=\"checkbox\" /><RedeemIcon />Add a gift receipt.\n                                        </small>\n                                      </>\n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"$\"}\n            \n                                />\n                                <button disabled={processing || disable ||succeeded}> \n                                 <span>{processing ? <p>Processing</p> : \"Place Your Order\"}</span>\n                                </button>\n                          </div>\n                          {/* Errors */}\n                          {/*if there's an error only then show the error in the div*/}\n                          {error && <div>(error)</div>}\n                      </form>\n                 </div>\n                </div>\n\n\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Payment\n ","/Users/adariusc/Projects/Amazon/amazon-clone/src/axios.js",[],{"ruleId":"85","severity":1,"message":"86","line":22,"column":10,"nodeType":"87","messageId":"88","endLine":22,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":48,"column":6,"nodeType":"91","endLine":48,"endColumn":8,"suggestions":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":12,"column":30,"nodeType":"99","messageId":"100","endLine":12,"endColumn":38},{"ruleId":"101","severity":1,"message":"102","line":23,"column":13,"nodeType":"103","endLine":26,"endColumn":15},{"ruleId":"97","severity":1,"message":"104","line":11,"column":14,"nodeType":"99","messageId":"100","endLine":11,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":10,"column":30,"nodeType":"99","messageId":"100","endLine":10,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":11,"column":22,"nodeType":"99","messageId":"100","endLine":11,"endColumn":30},{"ruleId":"97","severity":1,"message":"104","line":7,"column":14,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":19,"column":13,"nodeType":"103","endLine":20,"endColumn":15},{"ruleId":"97","severity":1,"message":"105","line":57,"column":15,"nodeType":"99","messageId":"100","endLine":57,"endColumn":22},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.",{"desc":"109","fix":"110"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"111","text":"112"},[1408,1410],"[dispatch]"]